#!/usr/bin/env python3

from enum import Enum
import sys, logging
import shops
from helpers import read_stdin, selenium_driver
from config import config

def buy(shop, choice_strategy, products):
	for product in products:
		logging.info(f"Current product: {product}")

		shop.search(product)
		step = choice_strategy(shop, product)
		if step == Step.BREAK:
			break
		elif step == Step.CONTINUE:
			continue

	shop.go_to_cart()

def default_choice_strategy(shop, product):
	products = list(shop.get_all_products())
	count = len(products)

	if count == 1:
		products[0].add_to_cart()
	elif count == 0:
		logging.info(f"{product} not found, continue shopping")
	else:
		products[0].add_to_cart()
		logging.info(f"{product} several found, buy the first one")

	return Step.CONTINUE

class Step(Enum):
	BREAK = 1
	CONTINUE = 2

logging.basicConfig(level=logging.INFO, format="%(message)s")

shop_name = sys.argv[1]
products = read_stdin()

with selenium_driver(config["selenium"]["path"], wait_quit=86400) as driver:
	shop = getattr(shops, shop_name)(driver)
	buy(shop, default_choice_strategy, products)
